import type { Metadata, Viewport } from "next";
import React, { Suspense } from "react";
import { Inter } from "next/font/google";
import { ThemeProvider } from "next-themes";
import { cn } from "@/lib/utils";
import "./globals.css";
import "@simple-stream/ui/globals.css";
import { getSiteUrl } from "@/lib/site-url";
import "./katex.css";
import { CookieProvider } from "@/context/cookie-context";
import { PathnameProvider } from "@/context/pathname-context";
import { PathnameSync } from "@/ui/pathname-sync";

const inter = Inter({
  variable: "--font-inter",
  subsets: ["latin", "latin-ext"]
});

export const viewport = {
  colorScheme: "normal",
  themeColor: "#0a0a0a",
  viewportFit: "cover",
  maximumScale: 1,
  userScalable: false,
  initialScale: 1,
  width: "device-width"
} satisfies Viewport;

export const metadata: Metadata = {
  metadataBase: new URL(getSiteUrl(process.env.NODE_ENV)),
  title: {
    default: "Simple OpenAI Stream",
    template: "%s | Simple Stream"
  },
  authors: [{ name: "Andrew Ross", url: "https://github.com/DopamineDriven" }],
  twitter: {
    card: "summary_large_image",
    title: "Simple Stream",
    creator: "@Dopamine_Driven",
    creatorId: "989610823105568769",
    description: "Simple OpenAI Streaming"
  },
  description: "@simple-stream/web generated by @d0paminedriven/turbogen",
  openGraph: {
    title: "Simple Stream",
    description: "Simple OpenAI Streaming.",
    url: getSiteUrl(process.env.NODE_ENV),
    siteName: "Simple Stream | simplestream",
    locale: "en_US",
    type: "website",
    countryName: "US",
    emails: ["andrew.simpson.ross@gmail.com"]
  },
  icons: [
    {
      type: "image/png",
      rel: "apple-touch-icon",
      url: new URL("/apple-touch-icon.png", getSiteUrl(process.env.NODE_ENV)),
      sizes: "180x180"
    },
    {
      type: "image/svg+xml",
      rel: "mask-icon",
      url: new URL("/favicon.svg", getSiteUrl(process.env.NODE_ENV))
    },
    {
      type: "image/png",
      rel: "icon",
      url: new URL("/meta/favicon-96x96.png", getSiteUrl(process.env.NODE_ENV)),
      sizes: "96x96"
    }
  ],
  creator: "Andrew Ross",
  appleWebApp: {
    startupImage: "/apple-icon.png",
    statusBarStyle: "black-translucent",
    title: "Simple Stream"
  },
  robots: {
    googleBot: {
      follow: true,
      index: true,
      indexifembedded: true,
      "max-video-preview": -1,
      "max-image-preview": "large",
      "max-snippet": -1
    },
    follow: true,
    index: true,
    indexifembedded: true,
    "max-video-preview": -1,
    "max-image-preview": "large",
    "max-snippet": -1
  }
};

export default async function RootLayout({
  children
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html suppressHydrationWarning lang="en">
      <head>
        <script
          async={true}
          id="prevent-flash-of-wrong-theme"
          dangerouslySetInnerHTML={{
            __html: `
              (function() {
                try {
                  const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
                  if (prefersDark) {
                    document.documentElement.classList.add('dark');
                  }
                } catch (e) {}
              })();
            `
          }}
        />
      </head>
      <body
        className={cn(
          "bg-background font-basis m-0 h-[100dvh] w-[100dvw] overflow-hidden p-0 antialiased",
          inter.variable
        )}>
        <CookieProvider>
          <ThemeProvider attribute={"class"} defaultTheme="system" enableSystem>
            <PathnameProvider>
              <Suspense fallback={null}>
                <PathnameSync />
              </Suspense>
              {children}
            </PathnameProvider>
          </ThemeProvider>
        </CookieProvider>
      </body>
    </html>
  );
}
